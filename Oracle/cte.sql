
--COMMON TABLE EXPRESSION
SELECT A.F_NAME,
       A.L_NAME,
       A.ADDRESS_ID,
       A.ADD_ID,
       A.CITY_ID,
       B.CITY_ID,
       B.COUNTRY_ID,
       B.CID,
       B.COUNTRY
FROM
(
SELECT T1.FIRST_NAME AS F_NAME,
       T1.LAST_NAME AS L_NAME,
       T1.ADDRESS_ID AS ADDRESS_ID,
       T2.ADDRESS_ID AS ADD_ID,
       T2.CITY_ID AS CITY_ID
FROM CUSTOMER T1
INNER JOIN ADDRESS T2
ON T1.ADDRESS_ID =T2.ADDRESS_ID
)A
INNER JOIN
(SELECT T1.CITY_ID AS CITY_ID,
        T1.COUNTRY_ID AS COUNTRY_ID,
        T2.COUNTRY_ID AS CID,
        T2.COUNTRY AS COUNTRY
 FROM CITY T1
 INNER JOIN COUNTRY T2
 ON T1.COUNTRY_ID = T2.COUNTRY_ID
 --WHERE T2.COUNTRY='Canada'
 )B
 ON A.CITY_ID =B.CITY_ID            
 WHERE B.COUNTRY = 'Canada';

--THE ABOVE QUERY AGAIN BREAK INTO 4 SUBSETS 
(4 BUCKET SENTANCE )
THEN LATER JOINED THEM THROUGH INNER JOIN .

SELECT A.F_NAME,
       A.ADDRESS_ID,
       B.ADD_ID,
       B.CITY_ID,
       C.CITY_ID,
       C.COUNTRY_ID,
       D.COUNTRY
FROM
(SELECT T1.FIRST_NAME AS F_NAME,
       T1.ADDRESS_ID AS ADDRESS_ID
FROM CUSTOMER T1)A
INNER JOIN
(SELECT T1.ADDRESS_ID AS ADD_ID,
        T1.CITY_ID AS CITY_ID
FROM ADDRESS T1)B
ON A.ADDRESS_ID=B.ADD_ID
INNER JOIN 
(SELECT T1.CITY_ID AS CITY_ID,
        T1.COUNTRY_ID AS COUNTRY_ID
FROM CITY T1)C
ON B.CITY_ID = C.CITY_ID
INNER JOIN
(SELECT T1.COUNTRY_ID AS COUNTRY_ID,
        T1.COUNTRY AS COUNTRY
 FROM COUNTRY T1)D
ON C.COUNTRY_ID = D.COUNTRY_ID            
 WHERE D.COUNTRY = 'Canada';

--COMMON TABLE EXPRESSION;
SUBSETS  USING FOUR DIFFERNT SENTANCE 

WITH IV AS
(SELECT T1.FIRST_NAME AS F_NAME,
        T1.LAST_NAME ASL_NAME,
        T1.ADDRESS_ID AS ADDRESS_ID 
FROM CUSTOMER T1), 
V AS
(SELECT T2.ADDRESS_ID AS ADD_ID,
        T2.CITY_ID AS CITY_ID
 FROM ADDRESS T2),
 X AS
(SELECT T3.CITY_ID AS CITY_ID,
         T3.COUNTRY_ID AS COUNTRY_ID
 FROM CITY T3),
 Y AS
 (SELECT T4.COUNTRY_ID AS COUNTRY_ID,
         T4.COUNTRY AS COUNTRY 
 FROM COUNTRY T4)
 SELECT * FROM IV 
 INNER JOIN V
 ON IV.ADDRESS_ID = V.ADD_ID
 INNER JOIN X
 ON V.CITY_ID = X.CITY_ID
 INNER JOIN Y
 ON Y.COUNTRY_ID = X.COUNTRY_ID
 WHERE y.COUNTRY ='Canada';

SELECT * FROM FILM
SELECT * FROM FILM_ACTOR
SELECT F.TITLE,COUNT(FA.ACTOR_ID)
FROM FILM F
INNER JOIN FILM_ACTOR FA
ON F.FILM_ID =FA.FILM_ID
GROUP BY F.TITLE;

SELECT * FROM PHYSICIAN;

ALTER TABLE DEPT1 ADD CONSTRAINT PK_STUDENT
PRIMARY KEY (DEPTNO);
SELECT * FROM STUDEN;
SELECT * FROM BRANCH;
SELECT * FROM COURSE;

ALTER TABLE BRANCH ADD CONSTRAINT PK_BRANCH
PRIMARY KEY 

SELECT * FROM PASSBOOK;

CREATE TABLe PASSBOOK
(TRAN_DATE DATE,
ACC_NAME VARCHAR2(20),TYPE CHAR(2),AMMOUNT NUMBER(10));

commit;
desc passbook;
alter table passbook add
insert into passbook values('06-jan-2022','NAPUR','CR',10000);
select * from passbook;

UPDATE PASSBOOK P
SET BALANCE =(P.AMMOUNT + (SELECT M.BALANCE  FROM PASSBOOK M
WHERE M.ACC_NAME =P.ACC_NAME AND rownum=1
ORDER BY TRAN_DATE DESC));
WHERE TRAN_DATE > SOMEDATE;

select acc_name,

select case 
when A.ACC_NAME=B.ACC_NAME

SELECT TRAN_DATE,ACC_NAME,TYPE,AMMOUNT,SUM(CASE 
WHEN TYPE ='DB' THEN AMMOUNT*-1 ELSE AMMOUNT END)
OVER (PARTITION BY ACC_NAME ORDER BY ACC_NAME,TRAN_DATE) AS BALANCE
FROM PASSBOOK;

SELECT * FROM PASSBOOK;

SELECT COUNTRY_ID,
RANK() OVER (PARTITION BY COUNTRY_ID ORDER BY CITY_ID ASC) 
FROM CITY;